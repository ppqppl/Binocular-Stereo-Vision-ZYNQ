// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Loop_2_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        PAR_R_RINV_val_2_2_out_out_din,
        PAR_R_RINV_val_2_2_out_out_full_n,
        PAR_R_RINV_val_2_2_out_out_write,
        PAR_R_RINV_val_2_1_out_out_din,
        PAR_R_RINV_val_2_1_out_out_full_n,
        PAR_R_RINV_val_2_1_out_out_write,
        PAR_R_RINV_val_2_0_out_out_din,
        PAR_R_RINV_val_2_0_out_out_full_n,
        PAR_R_RINV_val_2_0_out_out_write,
        PAR_R_RINV_val_1_2_out_out_din,
        PAR_R_RINV_val_1_2_out_out_full_n,
        PAR_R_RINV_val_1_2_out_out_write,
        PAR_R_RINV_val_1_1_out_out_din,
        PAR_R_RINV_val_1_1_out_out_full_n,
        PAR_R_RINV_val_1_1_out_out_write,
        PAR_R_RINV_val_1_0_out_out_din,
        PAR_R_RINV_val_1_0_out_out_full_n,
        PAR_R_RINV_val_1_0_out_out_write,
        PAR_R_RINV_val_0_2_out_out_din,
        PAR_R_RINV_val_0_2_out_out_full_n,
        PAR_R_RINV_val_0_2_out_out_write,
        PAR_R_RINV_val_0_1_out_out_din,
        PAR_R_RINV_val_0_1_out_out_full_n,
        PAR_R_RINV_val_0_1_out_out_write,
        PAR_R_RINV_val_0_0_out_out_din,
        PAR_R_RINV_val_0_0_out_out_full_n,
        PAR_R_RINV_val_0_0_out_out_write,
        PAR_L_RINV_val_2_2_out_out_din,
        PAR_L_RINV_val_2_2_out_out_full_n,
        PAR_L_RINV_val_2_2_out_out_write,
        PAR_L_RINV_val_2_1_out_out_din,
        PAR_L_RINV_val_2_1_out_out_full_n,
        PAR_L_RINV_val_2_1_out_out_write,
        PAR_L_RINV_val_2_0_out_out_din,
        PAR_L_RINV_val_2_0_out_out_full_n,
        PAR_L_RINV_val_2_0_out_out_write,
        PAR_L_RINV_val_1_2_out_out_din,
        PAR_L_RINV_val_1_2_out_out_full_n,
        PAR_L_RINV_val_1_2_out_out_write,
        PAR_L_RINV_val_1_1_out_out_din,
        PAR_L_RINV_val_1_1_out_out_full_n,
        PAR_L_RINV_val_1_1_out_out_write,
        PAR_L_RINV_val_1_0_out_out_din,
        PAR_L_RINV_val_1_0_out_out_full_n,
        PAR_L_RINV_val_1_0_out_out_write,
        PAR_L_RINV_val_0_2_out_out_din,
        PAR_L_RINV_val_0_2_out_out_full_n,
        PAR_L_RINV_val_0_2_out_out_write,
        PAR_L_RINV_val_0_1_out_out_din,
        PAR_L_RINV_val_0_1_out_out_full_n,
        PAR_L_RINV_val_0_1_out_out_write,
        PAR_L_RINV_val_0_0_out_out_din,
        PAR_L_RINV_val_0_0_out_out_full_n,
        PAR_L_RINV_val_0_0_out_out_write,
        cy2_out_out_din,
        cy2_out_out_full_n,
        cy2_out_out_write,
        fy2_out_out_din,
        fy2_out_out_full_n,
        fy2_out_out_write,
        cx2_out_out_din,
        cx2_out_out_full_n,
        cx2_out_out_write,
        fx2_out_out_din,
        fx2_out_out_full_n,
        fx2_out_out_write,
        cy1_out_out_din,
        cy1_out_out_full_n,
        cy1_out_out_write,
        fy1_out_out_din,
        fy1_out_out_full_n,
        fy1_out_out_write,
        cx1_out_out_din,
        cx1_out_out_full_n,
        cx1_out_out_write,
        fx1_out_out_din,
        fx1_out_out_full_n,
        fx1_out_out_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state4 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [31:0] PAR_R_RINV_val_2_2_out_out_din;
input   PAR_R_RINV_val_2_2_out_out_full_n;
output   PAR_R_RINV_val_2_2_out_out_write;
output  [31:0] PAR_R_RINV_val_2_1_out_out_din;
input   PAR_R_RINV_val_2_1_out_out_full_n;
output   PAR_R_RINV_val_2_1_out_out_write;
output  [31:0] PAR_R_RINV_val_2_0_out_out_din;
input   PAR_R_RINV_val_2_0_out_out_full_n;
output   PAR_R_RINV_val_2_0_out_out_write;
output  [31:0] PAR_R_RINV_val_1_2_out_out_din;
input   PAR_R_RINV_val_1_2_out_out_full_n;
output   PAR_R_RINV_val_1_2_out_out_write;
output  [31:0] PAR_R_RINV_val_1_1_out_out_din;
input   PAR_R_RINV_val_1_1_out_out_full_n;
output   PAR_R_RINV_val_1_1_out_out_write;
output  [31:0] PAR_R_RINV_val_1_0_out_out_din;
input   PAR_R_RINV_val_1_0_out_out_full_n;
output   PAR_R_RINV_val_1_0_out_out_write;
output  [31:0] PAR_R_RINV_val_0_2_out_out_din;
input   PAR_R_RINV_val_0_2_out_out_full_n;
output   PAR_R_RINV_val_0_2_out_out_write;
output  [31:0] PAR_R_RINV_val_0_1_out_out_din;
input   PAR_R_RINV_val_0_1_out_out_full_n;
output   PAR_R_RINV_val_0_1_out_out_write;
output  [31:0] PAR_R_RINV_val_0_0_out_out_din;
input   PAR_R_RINV_val_0_0_out_out_full_n;
output   PAR_R_RINV_val_0_0_out_out_write;
output  [31:0] PAR_L_RINV_val_2_2_out_out_din;
input   PAR_L_RINV_val_2_2_out_out_full_n;
output   PAR_L_RINV_val_2_2_out_out_write;
output  [31:0] PAR_L_RINV_val_2_1_out_out_din;
input   PAR_L_RINV_val_2_1_out_out_full_n;
output   PAR_L_RINV_val_2_1_out_out_write;
output  [31:0] PAR_L_RINV_val_2_0_out_out_din;
input   PAR_L_RINV_val_2_0_out_out_full_n;
output   PAR_L_RINV_val_2_0_out_out_write;
output  [31:0] PAR_L_RINV_val_1_2_out_out_din;
input   PAR_L_RINV_val_1_2_out_out_full_n;
output   PAR_L_RINV_val_1_2_out_out_write;
output  [31:0] PAR_L_RINV_val_1_1_out_out_din;
input   PAR_L_RINV_val_1_1_out_out_full_n;
output   PAR_L_RINV_val_1_1_out_out_write;
output  [31:0] PAR_L_RINV_val_1_0_out_out_din;
input   PAR_L_RINV_val_1_0_out_out_full_n;
output   PAR_L_RINV_val_1_0_out_out_write;
output  [31:0] PAR_L_RINV_val_0_2_out_out_din;
input   PAR_L_RINV_val_0_2_out_out_full_n;
output   PAR_L_RINV_val_0_2_out_out_write;
output  [31:0] PAR_L_RINV_val_0_1_out_out_din;
input   PAR_L_RINV_val_0_1_out_out_full_n;
output   PAR_L_RINV_val_0_1_out_out_write;
output  [31:0] PAR_L_RINV_val_0_0_out_out_din;
input   PAR_L_RINV_val_0_0_out_out_full_n;
output   PAR_L_RINV_val_0_0_out_out_write;
output  [31:0] cy2_out_out_din;
input   cy2_out_out_full_n;
output   cy2_out_out_write;
output  [31:0] fy2_out_out_din;
input   fy2_out_out_full_n;
output   fy2_out_out_write;
output  [31:0] cx2_out_out_din;
input   cx2_out_out_full_n;
output   cx2_out_out_write;
output  [31:0] fx2_out_out_din;
input   fx2_out_out_full_n;
output   fx2_out_out_write;
output  [31:0] cy1_out_out_din;
input   cy1_out_out_full_n;
output   cy1_out_out_write;
output  [31:0] fy1_out_out_din;
input   fy1_out_out_full_n;
output   fy1_out_out_write;
output  [31:0] cx1_out_out_din;
input   cx1_out_out_full_n;
output   cx1_out_out_write;
output  [31:0] fx1_out_out_din;
input   fx1_out_out_full_n;
output   fx1_out_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg PAR_R_RINV_val_2_2_out_out_write;
reg PAR_R_RINV_val_2_1_out_out_write;
reg PAR_R_RINV_val_2_0_out_out_write;
reg PAR_R_RINV_val_1_2_out_out_write;
reg PAR_R_RINV_val_1_1_out_out_write;
reg PAR_R_RINV_val_1_0_out_out_write;
reg PAR_R_RINV_val_0_2_out_out_write;
reg PAR_R_RINV_val_0_1_out_out_write;
reg PAR_R_RINV_val_0_0_out_out_write;
reg PAR_L_RINV_val_2_2_out_out_write;
reg PAR_L_RINV_val_2_1_out_out_write;
reg PAR_L_RINV_val_2_0_out_out_write;
reg PAR_L_RINV_val_1_2_out_out_write;
reg PAR_L_RINV_val_1_1_out_out_write;
reg PAR_L_RINV_val_1_0_out_out_write;
reg PAR_L_RINV_val_0_2_out_out_write;
reg PAR_L_RINV_val_0_1_out_out_write;
reg PAR_L_RINV_val_0_0_out_out_write;
reg cy2_out_out_write;
reg fy2_out_out_write;
reg cx2_out_out_write;
reg fx2_out_out_write;
reg cy1_out_out_write;
reg fy1_out_out_write;
reg cx1_out_out_write;
reg fx1_out_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] PAR_R_RM_INV_address0;
reg    PAR_R_RM_INV_ce0;
wire   [31:0] PAR_R_RM_INV_q0;
wire   [3:0] PAR_R_RM_INV_address1;
reg    PAR_R_RM_INV_ce1;
wire   [31:0] PAR_R_RM_INV_q1;
wire   [3:0] PAR_R_RM_INV_address2;
reg    PAR_R_RM_INV_ce2;
wire   [31:0] PAR_R_RM_INV_q2;
wire   [3:0] PAR_L_RM_INV_address0;
reg    PAR_L_RM_INV_ce0;
wire   [31:0] PAR_L_RM_INV_q0;
wire   [3:0] PAR_L_RM_INV_address1;
reg    PAR_L_RM_INV_ce1;
wire   [31:0] PAR_L_RM_INV_q1;
wire   [3:0] PAR_L_RM_INV_address2;
reg    PAR_L_RM_INV_ce2;
wire   [31:0] PAR_L_RM_INV_q2;
wire   [3:0] PAR_R_CAMM_RAW_address0;
reg    PAR_R_CAMM_RAW_ce0;
wire   [31:0] PAR_R_CAMM_RAW_q0;
wire   [3:0] PAR_R_CAMM_RAW_address1;
reg    PAR_R_CAMM_RAW_ce1;
wire   [31:0] PAR_R_CAMM_RAW_q1;
wire   [3:0] PAR_R_CAMM_RAW_address2;
reg    PAR_R_CAMM_RAW_ce2;
wire   [31:0] PAR_R_CAMM_RAW_q2;
wire   [3:0] PAR_L_CAMM_RAW_address0;
reg    PAR_L_CAMM_RAW_ce0;
wire   [31:0] PAR_L_CAMM_RAW_q0;
wire   [3:0] PAR_L_CAMM_RAW_address1;
reg    PAR_L_CAMM_RAW_ce1;
wire   [31:0] PAR_L_CAMM_RAW_q1;
wire   [3:0] PAR_L_CAMM_RAW_address2;
reg    PAR_L_CAMM_RAW_ce2;
wire   [31:0] PAR_L_CAMM_RAW_q2;
reg    PAR_R_RINV_val_2_2_out_out_blk_n;
wire    ap_CS_fsm_state4;
reg    PAR_R_RINV_val_2_1_out_out_blk_n;
reg    PAR_R_RINV_val_2_0_out_out_blk_n;
reg    PAR_R_RINV_val_1_2_out_out_blk_n;
reg    PAR_R_RINV_val_1_1_out_out_blk_n;
reg    PAR_R_RINV_val_1_0_out_out_blk_n;
reg    PAR_R_RINV_val_0_2_out_out_blk_n;
reg    PAR_R_RINV_val_0_1_out_out_blk_n;
reg    PAR_R_RINV_val_0_0_out_out_blk_n;
reg    PAR_L_RINV_val_2_2_out_out_blk_n;
reg    PAR_L_RINV_val_2_1_out_out_blk_n;
reg    PAR_L_RINV_val_2_0_out_out_blk_n;
reg    PAR_L_RINV_val_1_2_out_out_blk_n;
reg    PAR_L_RINV_val_1_1_out_out_blk_n;
reg    PAR_L_RINV_val_1_0_out_out_blk_n;
reg    PAR_L_RINV_val_0_2_out_out_blk_n;
reg    PAR_L_RINV_val_0_1_out_out_blk_n;
reg    PAR_L_RINV_val_0_0_out_out_blk_n;
reg    cy2_out_out_blk_n;
reg    fy2_out_out_blk_n;
reg    cx2_out_out_blk_n;
reg    fx2_out_out_blk_n;
reg    cy1_out_out_blk_n;
reg    fy1_out_out_blk_n;
reg    cx1_out_out_blk_n;
reg    fx1_out_out_blk_n;
reg   [31:0] fy2_out_dc_reg_786;
reg   [31:0] fx2_out_dc_reg_799;
reg   [31:0] fy1_out_dc_reg_812;
reg   [31:0] fx1_out_dc_reg_825;
reg   [1:0] i_i_reg_838;
wire   [0:0] exitcond1_i_fu_850_p2;
reg   [0:0] exitcond1_i_reg_1302;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [1:0] i_fu_856_p2;
reg   [1:0] i_reg_1306;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] PAR_L_CAMM_val_0_0_164_fu_934_p3;
reg    ap_enable_reg_pp0_iter1;
wire   [31:0] PAR_R_CAMM_val_0_0_165_fu_942_p3;
wire   [31:0] PAR_L_CAMM_val_1_1_162_fu_986_p3;
wire   [31:0] PAR_R_CAMM_val_1_1_163_fu_994_p3;
reg    ap_block_state1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage0;
reg   [1:0] ap_phi_mux_i_i_phi_fu_842_p4;
wire   [63:0] tmp_41_i_fu_888_p1;
wire   [63:0] tmp_41_1_i_fu_906_p1;
wire   [63:0] tmp_41_2_i_fu_920_p1;
reg    ap_block_state4;
reg   [31:0] PAR_L_CAMM_val_1_2_fu_368;
reg   [31:0] PAR_L_CAMM_val_1_2_1_fu_372;
reg   [31:0] PAR_R_CAMM_val_1_2_fu_376;
reg   [31:0] PAR_R_CAMM_val_1_2_1_fu_380;
reg   [31:0] PAR_L_RINV_val_2_0_fu_384;
reg   [31:0] PAR_L_RINV_val_2_1_fu_388;
reg   [31:0] PAR_L_RINV_val_2_2_fu_392;
reg   [31:0] PAR_L_RINV_val_2_0_1_fu_396;
reg   [31:0] PAR_L_RINV_val_2_1_1_fu_400;
reg   [31:0] PAR_L_RINV_val_2_2_1_fu_404;
reg   [31:0] PAR_L_RINV_val_2_0_2_fu_408;
reg   [31:0] PAR_L_RINV_val_2_1_2_fu_412;
reg   [31:0] PAR_L_RINV_val_2_2_2_fu_416;
reg   [31:0] PAR_R_RINV_val_2_0_fu_420;
reg   [31:0] PAR_R_RINV_val_2_1_fu_424;
reg   [31:0] PAR_R_RINV_val_2_2_fu_428;
reg   [31:0] PAR_R_RINV_val_2_0_1_fu_432;
reg   [31:0] PAR_R_RINV_val_2_1_1_fu_436;
reg   [31:0] PAR_R_RINV_val_2_2_1_fu_440;
reg   [31:0] PAR_R_RINV_val_2_0_2_fu_444;
reg   [31:0] PAR_R_RINV_val_2_1_2_fu_448;
reg   [31:0] PAR_R_RINV_val_2_2_2_fu_452;
wire   [3:0] p_shl_i_fu_866_p3;
wire   [4:0] p_shl_cast_i_fu_874_p1;
wire   [4:0] i_cast548_i_fu_862_p1;
wire  signed [4:0] tmp_20_i_fu_878_p2;
wire  signed [31:0] tmp_20_cast_i_fu_884_p1;
wire   [4:0] tmp_40_1_i_fu_896_p2;
wire  signed [31:0] tmp_40_1_cast_i_fu_902_p1;
wire   [4:0] tmp_40_2_i_fu_914_p2;
wire   [0:0] cond_i_fu_928_p2;
wire   [0:0] cond1_i_fu_980_p2;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

Loop_2_proc_PAR_Rbkb #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
PAR_R_RM_INV_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(PAR_R_RM_INV_address0),
    .ce0(PAR_R_RM_INV_ce0),
    .q0(PAR_R_RM_INV_q0),
    .address1(PAR_R_RM_INV_address1),
    .ce1(PAR_R_RM_INV_ce1),
    .q1(PAR_R_RM_INV_q1),
    .address2(PAR_R_RM_INV_address2),
    .ce2(PAR_R_RM_INV_ce2),
    .q2(PAR_R_RM_INV_q2)
);

Loop_2_proc_PAR_Lcud #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
PAR_L_RM_INV_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(PAR_L_RM_INV_address0),
    .ce0(PAR_L_RM_INV_ce0),
    .q0(PAR_L_RM_INV_q0),
    .address1(PAR_L_RM_INV_address1),
    .ce1(PAR_L_RM_INV_ce1),
    .q1(PAR_L_RM_INV_q1),
    .address2(PAR_L_RM_INV_address2),
    .ce2(PAR_L_RM_INV_ce2),
    .q2(PAR_L_RM_INV_q2)
);

Loop_2_proc_PAR_RdEe #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
PAR_R_CAMM_RAW_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(PAR_R_CAMM_RAW_address0),
    .ce0(PAR_R_CAMM_RAW_ce0),
    .q0(PAR_R_CAMM_RAW_q0),
    .address1(PAR_R_CAMM_RAW_address1),
    .ce1(PAR_R_CAMM_RAW_ce1),
    .q1(PAR_R_CAMM_RAW_q1),
    .address2(PAR_R_CAMM_RAW_address2),
    .ce2(PAR_R_CAMM_RAW_ce2),
    .q2(PAR_R_CAMM_RAW_q2)
);

Loop_2_proc_PAR_LeOg #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
PAR_L_CAMM_RAW_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(PAR_L_CAMM_RAW_address0),
    .ce0(PAR_L_CAMM_RAW_ce0),
    .q0(PAR_L_CAMM_RAW_q0),
    .address1(PAR_L_CAMM_RAW_address1),
    .ce1(PAR_L_CAMM_RAW_ce1),
    .q1(PAR_L_CAMM_RAW_q1),
    .address2(PAR_L_CAMM_RAW_address2),
    .ce2(PAR_L_CAMM_RAW_ce2),
    .q2(PAR_L_CAMM_RAW_q2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_i_reg_838 <= 2'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond1_i_reg_1302 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_i_reg_838 <= i_reg_1306;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (i_i_reg_838 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        PAR_L_CAMM_val_1_2_1_fu_372 <= PAR_L_CAMM_RAW_q2;
        PAR_L_RINV_val_2_0_1_fu_396 <= PAR_L_RM_INV_q0;
        PAR_L_RINV_val_2_1_1_fu_400 <= PAR_L_RM_INV_q1;
        PAR_L_RINV_val_2_2_1_fu_404 <= PAR_L_RM_INV_q2;
        PAR_R_CAMM_val_1_2_1_fu_380 <= PAR_R_CAMM_RAW_q2;
        PAR_R_RINV_val_2_0_1_fu_432 <= PAR_R_RM_INV_q0;
        PAR_R_RINV_val_2_1_1_fu_436 <= PAR_R_RM_INV_q1;
        PAR_R_RINV_val_2_2_1_fu_440 <= PAR_R_RM_INV_q2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (i_i_reg_838 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        PAR_L_CAMM_val_1_2_fu_368 <= PAR_L_CAMM_RAW_q2;
        PAR_L_RINV_val_2_0_fu_384 <= PAR_L_RM_INV_q0;
        PAR_L_RINV_val_2_1_fu_388 <= PAR_L_RM_INV_q1;
        PAR_L_RINV_val_2_2_fu_392 <= PAR_L_RM_INV_q2;
        PAR_R_CAMM_val_1_2_fu_376 <= PAR_R_CAMM_RAW_q2;
        PAR_R_RINV_val_2_0_fu_420 <= PAR_R_RM_INV_q0;
        PAR_R_RINV_val_2_1_fu_424 <= PAR_R_RM_INV_q1;
        PAR_R_RINV_val_2_2_fu_428 <= PAR_R_RM_INV_q2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(i_i_reg_838 == 2'd1) & ~(i_i_reg_838 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        PAR_L_RINV_val_2_0_2_fu_408 <= PAR_L_RM_INV_q0;
        PAR_L_RINV_val_2_1_2_fu_412 <= PAR_L_RM_INV_q1;
        PAR_L_RINV_val_2_2_2_fu_416 <= PAR_L_RM_INV_q2;
        PAR_R_RINV_val_2_0_2_fu_444 <= PAR_R_RM_INV_q0;
        PAR_R_RINV_val_2_1_2_fu_448 <= PAR_R_RM_INV_q1;
        PAR_R_RINV_val_2_2_2_fu_452 <= PAR_R_RM_INV_q2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond1_i_reg_1302 <= exitcond1_i_fu_850_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond1_i_reg_1302 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fx1_out_dc_reg_825 <= PAR_L_CAMM_val_0_0_164_fu_934_p3;
        fx2_out_dc_reg_799 <= PAR_R_CAMM_val_0_0_165_fu_942_p3;
        fy1_out_dc_reg_812 <= PAR_L_CAMM_val_1_1_162_fu_986_p3;
        fy2_out_dc_reg_786 <= PAR_R_CAMM_val_1_1_163_fu_994_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_1306 <= i_fu_856_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        PAR_L_CAMM_RAW_ce0 = 1'b1;
    end else begin
        PAR_L_CAMM_RAW_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        PAR_L_CAMM_RAW_ce1 = 1'b1;
    end else begin
        PAR_L_CAMM_RAW_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        PAR_L_CAMM_RAW_ce2 = 1'b1;
    end else begin
        PAR_L_CAMM_RAW_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PAR_L_RINV_val_0_0_out_out_blk_n = PAR_L_RINV_val_0_0_out_out_full_n;
    end else begin
        PAR_L_RINV_val_0_0_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        PAR_L_RINV_val_0_0_out_out_write = 1'b1;
    end else begin
        PAR_L_RINV_val_0_0_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PAR_L_RINV_val_0_1_out_out_blk_n = PAR_L_RINV_val_0_1_out_out_full_n;
    end else begin
        PAR_L_RINV_val_0_1_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        PAR_L_RINV_val_0_1_out_out_write = 1'b1;
    end else begin
        PAR_L_RINV_val_0_1_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PAR_L_RINV_val_0_2_out_out_blk_n = PAR_L_RINV_val_0_2_out_out_full_n;
    end else begin
        PAR_L_RINV_val_0_2_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        PAR_L_RINV_val_0_2_out_out_write = 1'b1;
    end else begin
        PAR_L_RINV_val_0_2_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PAR_L_RINV_val_1_0_out_out_blk_n = PAR_L_RINV_val_1_0_out_out_full_n;
    end else begin
        PAR_L_RINV_val_1_0_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        PAR_L_RINV_val_1_0_out_out_write = 1'b1;
    end else begin
        PAR_L_RINV_val_1_0_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PAR_L_RINV_val_1_1_out_out_blk_n = PAR_L_RINV_val_1_1_out_out_full_n;
    end else begin
        PAR_L_RINV_val_1_1_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        PAR_L_RINV_val_1_1_out_out_write = 1'b1;
    end else begin
        PAR_L_RINV_val_1_1_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PAR_L_RINV_val_1_2_out_out_blk_n = PAR_L_RINV_val_1_2_out_out_full_n;
    end else begin
        PAR_L_RINV_val_1_2_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        PAR_L_RINV_val_1_2_out_out_write = 1'b1;
    end else begin
        PAR_L_RINV_val_1_2_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PAR_L_RINV_val_2_0_out_out_blk_n = PAR_L_RINV_val_2_0_out_out_full_n;
    end else begin
        PAR_L_RINV_val_2_0_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        PAR_L_RINV_val_2_0_out_out_write = 1'b1;
    end else begin
        PAR_L_RINV_val_2_0_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PAR_L_RINV_val_2_1_out_out_blk_n = PAR_L_RINV_val_2_1_out_out_full_n;
    end else begin
        PAR_L_RINV_val_2_1_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        PAR_L_RINV_val_2_1_out_out_write = 1'b1;
    end else begin
        PAR_L_RINV_val_2_1_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PAR_L_RINV_val_2_2_out_out_blk_n = PAR_L_RINV_val_2_2_out_out_full_n;
    end else begin
        PAR_L_RINV_val_2_2_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        PAR_L_RINV_val_2_2_out_out_write = 1'b1;
    end else begin
        PAR_L_RINV_val_2_2_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        PAR_L_RM_INV_ce0 = 1'b1;
    end else begin
        PAR_L_RM_INV_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        PAR_L_RM_INV_ce1 = 1'b1;
    end else begin
        PAR_L_RM_INV_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        PAR_L_RM_INV_ce2 = 1'b1;
    end else begin
        PAR_L_RM_INV_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        PAR_R_CAMM_RAW_ce0 = 1'b1;
    end else begin
        PAR_R_CAMM_RAW_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        PAR_R_CAMM_RAW_ce1 = 1'b1;
    end else begin
        PAR_R_CAMM_RAW_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        PAR_R_CAMM_RAW_ce2 = 1'b1;
    end else begin
        PAR_R_CAMM_RAW_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PAR_R_RINV_val_0_0_out_out_blk_n = PAR_R_RINV_val_0_0_out_out_full_n;
    end else begin
        PAR_R_RINV_val_0_0_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        PAR_R_RINV_val_0_0_out_out_write = 1'b1;
    end else begin
        PAR_R_RINV_val_0_0_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PAR_R_RINV_val_0_1_out_out_blk_n = PAR_R_RINV_val_0_1_out_out_full_n;
    end else begin
        PAR_R_RINV_val_0_1_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        PAR_R_RINV_val_0_1_out_out_write = 1'b1;
    end else begin
        PAR_R_RINV_val_0_1_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PAR_R_RINV_val_0_2_out_out_blk_n = PAR_R_RINV_val_0_2_out_out_full_n;
    end else begin
        PAR_R_RINV_val_0_2_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        PAR_R_RINV_val_0_2_out_out_write = 1'b1;
    end else begin
        PAR_R_RINV_val_0_2_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PAR_R_RINV_val_1_0_out_out_blk_n = PAR_R_RINV_val_1_0_out_out_full_n;
    end else begin
        PAR_R_RINV_val_1_0_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        PAR_R_RINV_val_1_0_out_out_write = 1'b1;
    end else begin
        PAR_R_RINV_val_1_0_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PAR_R_RINV_val_1_1_out_out_blk_n = PAR_R_RINV_val_1_1_out_out_full_n;
    end else begin
        PAR_R_RINV_val_1_1_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        PAR_R_RINV_val_1_1_out_out_write = 1'b1;
    end else begin
        PAR_R_RINV_val_1_1_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PAR_R_RINV_val_1_2_out_out_blk_n = PAR_R_RINV_val_1_2_out_out_full_n;
    end else begin
        PAR_R_RINV_val_1_2_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        PAR_R_RINV_val_1_2_out_out_write = 1'b1;
    end else begin
        PAR_R_RINV_val_1_2_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PAR_R_RINV_val_2_0_out_out_blk_n = PAR_R_RINV_val_2_0_out_out_full_n;
    end else begin
        PAR_R_RINV_val_2_0_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        PAR_R_RINV_val_2_0_out_out_write = 1'b1;
    end else begin
        PAR_R_RINV_val_2_0_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PAR_R_RINV_val_2_1_out_out_blk_n = PAR_R_RINV_val_2_1_out_out_full_n;
    end else begin
        PAR_R_RINV_val_2_1_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        PAR_R_RINV_val_2_1_out_out_write = 1'b1;
    end else begin
        PAR_R_RINV_val_2_1_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PAR_R_RINV_val_2_2_out_out_blk_n = PAR_R_RINV_val_2_2_out_out_full_n;
    end else begin
        PAR_R_RINV_val_2_2_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        PAR_R_RINV_val_2_2_out_out_write = 1'b1;
    end else begin
        PAR_R_RINV_val_2_2_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        PAR_R_RM_INV_ce0 = 1'b1;
    end else begin
        PAR_R_RM_INV_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        PAR_R_RM_INV_ce1 = 1'b1;
    end else begin
        PAR_R_RM_INV_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        PAR_R_RM_INV_ce2 = 1'b1;
    end else begin
        PAR_R_RM_INV_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond1_i_fu_850_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond1_i_reg_1302 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_i_phi_fu_842_p4 = i_reg_1306;
    end else begin
        ap_phi_mux_i_i_phi_fu_842_p4 = i_i_reg_838;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        cx1_out_out_blk_n = cx1_out_out_full_n;
    end else begin
        cx1_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        cx1_out_out_write = 1'b1;
    end else begin
        cx1_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        cx2_out_out_blk_n = cx2_out_out_full_n;
    end else begin
        cx2_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        cx2_out_out_write = 1'b1;
    end else begin
        cx2_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        cy1_out_out_blk_n = cy1_out_out_full_n;
    end else begin
        cy1_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        cy1_out_out_write = 1'b1;
    end else begin
        cy1_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        cy2_out_out_blk_n = cy2_out_out_full_n;
    end else begin
        cy2_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        cy2_out_out_write = 1'b1;
    end else begin
        cy2_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        fx1_out_out_blk_n = fx1_out_out_full_n;
    end else begin
        fx1_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        fx1_out_out_write = 1'b1;
    end else begin
        fx1_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        fx2_out_out_blk_n = fx2_out_out_full_n;
    end else begin
        fx2_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        fx2_out_out_write = 1'b1;
    end else begin
        fx2_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        fy1_out_out_blk_n = fy1_out_out_full_n;
    end else begin
        fy1_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        fy1_out_out_write = 1'b1;
    end else begin
        fy1_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        fy2_out_out_blk_n = fy2_out_out_full_n;
    end else begin
        fy2_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        fy2_out_out_write = 1'b1;
    end else begin
        fy2_out_out_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond1_i_fu_850_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond1_i_fu_850_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign PAR_L_CAMM_RAW_address0 = tmp_41_i_fu_888_p1;

assign PAR_L_CAMM_RAW_address1 = tmp_41_1_i_fu_906_p1;

assign PAR_L_CAMM_RAW_address2 = tmp_41_2_i_fu_920_p1;

assign PAR_L_CAMM_val_0_0_164_fu_934_p3 = ((cond_i_fu_928_p2[0:0] === 1'b1) ? PAR_L_CAMM_RAW_q0 : fx1_out_dc_reg_825);

assign PAR_L_CAMM_val_1_1_162_fu_986_p3 = ((cond1_i_fu_980_p2[0:0] === 1'b1) ? PAR_L_CAMM_RAW_q1 : fy1_out_dc_reg_812);

assign PAR_L_RINV_val_0_0_out_out_din = PAR_L_RINV_val_2_0_fu_384;

assign PAR_L_RINV_val_0_1_out_out_din = PAR_L_RINV_val_2_1_fu_388;

assign PAR_L_RINV_val_0_2_out_out_din = PAR_L_RINV_val_2_2_fu_392;

assign PAR_L_RINV_val_1_0_out_out_din = PAR_L_RINV_val_2_0_1_fu_396;

assign PAR_L_RINV_val_1_1_out_out_din = PAR_L_RINV_val_2_1_1_fu_400;

assign PAR_L_RINV_val_1_2_out_out_din = PAR_L_RINV_val_2_2_1_fu_404;

assign PAR_L_RINV_val_2_0_out_out_din = PAR_L_RINV_val_2_0_2_fu_408;

assign PAR_L_RINV_val_2_1_out_out_din = PAR_L_RINV_val_2_1_2_fu_412;

assign PAR_L_RINV_val_2_2_out_out_din = PAR_L_RINV_val_2_2_2_fu_416;

assign PAR_L_RM_INV_address0 = tmp_41_i_fu_888_p1;

assign PAR_L_RM_INV_address1 = tmp_41_1_i_fu_906_p1;

assign PAR_L_RM_INV_address2 = tmp_41_2_i_fu_920_p1;

assign PAR_R_CAMM_RAW_address0 = tmp_41_i_fu_888_p1;

assign PAR_R_CAMM_RAW_address1 = tmp_41_1_i_fu_906_p1;

assign PAR_R_CAMM_RAW_address2 = tmp_41_2_i_fu_920_p1;

assign PAR_R_CAMM_val_0_0_165_fu_942_p3 = ((cond_i_fu_928_p2[0:0] === 1'b1) ? PAR_R_CAMM_RAW_q0 : fx2_out_dc_reg_799);

assign PAR_R_CAMM_val_1_1_163_fu_994_p3 = ((cond1_i_fu_980_p2[0:0] === 1'b1) ? PAR_R_CAMM_RAW_q1 : fy2_out_dc_reg_786);

assign PAR_R_RINV_val_0_0_out_out_din = PAR_R_RINV_val_2_0_fu_420;

assign PAR_R_RINV_val_0_1_out_out_din = PAR_R_RINV_val_2_1_fu_424;

assign PAR_R_RINV_val_0_2_out_out_din = PAR_R_RINV_val_2_2_fu_428;

assign PAR_R_RINV_val_1_0_out_out_din = PAR_R_RINV_val_2_0_1_fu_432;

assign PAR_R_RINV_val_1_1_out_out_din = PAR_R_RINV_val_2_1_1_fu_436;

assign PAR_R_RINV_val_1_2_out_out_din = PAR_R_RINV_val_2_2_1_fu_440;

assign PAR_R_RINV_val_2_0_out_out_din = PAR_R_RINV_val_2_0_2_fu_444;

assign PAR_R_RINV_val_2_1_out_out_din = PAR_R_RINV_val_2_1_2_fu_448;

assign PAR_R_RINV_val_2_2_out_out_din = PAR_R_RINV_val_2_2_2_fu_452;

assign PAR_R_RM_INV_address0 = tmp_41_i_fu_888_p1;

assign PAR_R_RM_INV_address1 = tmp_41_1_i_fu_906_p1;

assign PAR_R_RM_INV_address2 = tmp_41_2_i_fu_920_p1;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4 = ((cy2_out_out_full_n == 1'b0) | (1'b0 == PAR_L_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_L_RINV_val_2_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_0_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_1_2_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_0_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_1_out_out_full_n) | (1'b0 == PAR_R_RINV_val_2_2_out_out_full_n) | (fx1_out_out_full_n == 1'b0) | (cx1_out_out_full_n == 1'b0) | (fy1_out_out_full_n == 1'b0) | (cy1_out_out_full_n == 1'b0) | (fx2_out_out_full_n == 1'b0) | (cx2_out_out_full_n == 1'b0) | (fy2_out_out_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign cond1_i_fu_980_p2 = ((i_i_reg_838 == 2'd1) ? 1'b1 : 1'b0);

assign cond_i_fu_928_p2 = ((i_i_reg_838 == 2'd0) ? 1'b1 : 1'b0);

assign cx1_out_out_din = PAR_L_CAMM_val_1_2_fu_368;

assign cx2_out_out_din = PAR_R_CAMM_val_1_2_fu_376;

assign cy1_out_out_din = PAR_L_CAMM_val_1_2_1_fu_372;

assign cy2_out_out_din = PAR_R_CAMM_val_1_2_1_fu_380;

assign exitcond1_i_fu_850_p2 = ((ap_phi_mux_i_i_phi_fu_842_p4 == 2'd3) ? 1'b1 : 1'b0);

assign fx1_out_out_din = fx1_out_dc_reg_825;

assign fx2_out_out_din = fx2_out_dc_reg_799;

assign fy1_out_out_din = fy1_out_dc_reg_812;

assign fy2_out_out_din = fy2_out_dc_reg_786;

assign i_cast548_i_fu_862_p1 = ap_phi_mux_i_i_phi_fu_842_p4;

assign i_fu_856_p2 = (ap_phi_mux_i_i_phi_fu_842_p4 + 2'd1);

assign p_shl_cast_i_fu_874_p1 = p_shl_i_fu_866_p3;

assign p_shl_i_fu_866_p3 = {{ap_phi_mux_i_i_phi_fu_842_p4}, {2'd0}};

assign tmp_20_cast_i_fu_884_p1 = tmp_20_i_fu_878_p2;

assign tmp_20_i_fu_878_p2 = (p_shl_cast_i_fu_874_p1 - i_cast548_i_fu_862_p1);

assign tmp_40_1_cast_i_fu_902_p1 = $signed(tmp_40_1_i_fu_896_p2);

assign tmp_40_1_i_fu_896_p2 = ($signed(tmp_20_i_fu_878_p2) + $signed(5'd1));

assign tmp_40_2_i_fu_914_p2 = ($signed(tmp_20_i_fu_878_p2) + $signed(5'd2));

assign tmp_41_1_i_fu_906_p1 = $unsigned(tmp_40_1_cast_i_fu_902_p1);

assign tmp_41_2_i_fu_920_p1 = tmp_40_2_i_fu_914_p2;

assign tmp_41_i_fu_888_p1 = $unsigned(tmp_20_cast_i_fu_884_p1);

endmodule //Loop_2_proc
