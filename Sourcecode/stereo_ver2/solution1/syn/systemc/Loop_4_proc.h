// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Loop_4_proc_HH_
#define _Loop_4_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Loop_4_proc : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > packets_loc_dout;
    sc_in< sc_logic > packets_loc_empty_n;
    sc_out< sc_logic > packets_loc_read;
    sc_in< sc_lv<32> > cols_V;
    sc_in< sc_lv<32> > rows_V;
    sc_out< sc_lv<32> > dMapout_TDATA;
    sc_out< sc_logic > dMapout_TVALID;
    sc_in< sc_logic > dMapout_TREADY;
    sc_in< sc_lv<8> > dMap_data_stream_0_V_dout;
    sc_in< sc_logic > dMap_data_stream_0_V_empty_n;
    sc_out< sc_logic > dMap_data_stream_0_V_read;
    sc_out< sc_lv<1> > dMapout_TUSER;
    sc_out< sc_lv<1> > dMapout_TLAST;


    // Module declarations
    Loop_4_proc(sc_module_name name);
    SC_HAS_PROCESS(Loop_4_proc);

    ~Loop_4_proc();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > dMapout_data_V_1_data_out;
    sc_signal< sc_logic > dMapout_data_V_1_vld_in;
    sc_signal< sc_logic > dMapout_data_V_1_vld_out;
    sc_signal< sc_logic > dMapout_data_V_1_ack_in;
    sc_signal< sc_logic > dMapout_data_V_1_ack_out;
    sc_signal< sc_lv<32> > dMapout_data_V_1_payload_A;
    sc_signal< sc_lv<32> > dMapout_data_V_1_payload_B;
    sc_signal< sc_logic > dMapout_data_V_1_sel_rd;
    sc_signal< sc_logic > dMapout_data_V_1_sel_wr;
    sc_signal< sc_logic > dMapout_data_V_1_sel;
    sc_signal< sc_logic > dMapout_data_V_1_load_A;
    sc_signal< sc_logic > dMapout_data_V_1_load_B;
    sc_signal< sc_lv<2> > dMapout_data_V_1_state;
    sc_signal< sc_logic > dMapout_data_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > dMapout_user_V_1_data_out;
    sc_signal< sc_logic > dMapout_user_V_1_vld_in;
    sc_signal< sc_logic > dMapout_user_V_1_vld_out;
    sc_signal< sc_logic > dMapout_user_V_1_ack_in;
    sc_signal< sc_logic > dMapout_user_V_1_ack_out;
    sc_signal< sc_lv<1> > dMapout_user_V_1_payload_A;
    sc_signal< sc_lv<1> > dMapout_user_V_1_payload_B;
    sc_signal< sc_logic > dMapout_user_V_1_sel_rd;
    sc_signal< sc_logic > dMapout_user_V_1_sel_wr;
    sc_signal< sc_logic > dMapout_user_V_1_sel;
    sc_signal< sc_logic > dMapout_user_V_1_load_A;
    sc_signal< sc_logic > dMapout_user_V_1_load_B;
    sc_signal< sc_lv<2> > dMapout_user_V_1_state;
    sc_signal< sc_logic > dMapout_user_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > dMapout_last_V_1_data_out;
    sc_signal< sc_logic > dMapout_last_V_1_vld_in;
    sc_signal< sc_logic > dMapout_last_V_1_vld_out;
    sc_signal< sc_logic > dMapout_last_V_1_ack_in;
    sc_signal< sc_logic > dMapout_last_V_1_ack_out;
    sc_signal< sc_lv<1> > dMapout_last_V_1_payload_A;
    sc_signal< sc_lv<1> > dMapout_last_V_1_payload_B;
    sc_signal< sc_logic > dMapout_last_V_1_sel_rd;
    sc_signal< sc_logic > dMapout_last_V_1_sel_wr;
    sc_signal< sc_logic > dMapout_last_V_1_sel;
    sc_signal< sc_logic > dMapout_last_V_1_load_A;
    sc_signal< sc_logic > dMapout_last_V_1_load_B;
    sc_signal< sc_lv<2> > dMapout_last_V_1_state;
    sc_signal< sc_logic > dMapout_last_V_1_state_cmp_full;
    sc_signal< sc_logic > packets_loc_blk_n;
    sc_signal< sc_logic > dMapout_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_372;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_372_pp0_iter1_reg;
    sc_signal< sc_logic > dMap_data_stream_0_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<62> > indvar_flatten_reg_137;
    sc_signal< sc_lv<32> > i_op_assign_reg_148;
    sc_signal< sc_lv<31> > p_1_rec_i_i_reg_159;
    sc_signal< sc_lv<32> > packets_loc_read_reg_349;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<32> > tmp_26_i_i_fu_223_p2;
    sc_signal< sc_lv<32> > tmp_26_i_i_reg_356;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<31> > tmp_14_cast_i_i_fu_239_p1;
    sc_signal< sc_lv<62> > bound_fu_251_p2;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_257_p2;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state7_io;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<62> > indvar_flatten_next_fu_262_p2;
    sc_signal< sc_lv<62> > indvar_flatten_next_reg_376;
    sc_signal< sc_lv<1> > dMapout_user_V_tmp_fu_291_p3;
    sc_signal< sc_lv<1> > dMapout_user_V_tmp_reg_381;
    sc_signal< sc_lv<1> > dMapout_last_V_tmp_fu_309_p3;
    sc_signal< sc_lv<1> > dMapout_last_V_tmp_reg_386;
    sc_signal< sc_lv<32> > i_op_assign_mid2_fu_317_p3;
    sc_signal< sc_lv<32> > i_op_assign_mid2_reg_391;
    sc_signal< sc_lv<31> > p_rec_i_i_fu_331_p3;
    sc_signal< sc_lv<31> > p_rec_i_i_reg_396;
    sc_signal< sc_lv<8> > tmp_151_reg_401;
    sc_signal< bool > ap_block_state4_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state8_pp0_stage1_iter1;
    sc_signal< bool > ap_block_state8_io;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<8> > tmp_152_reg_406;
    sc_signal< bool > ap_block_state5_pp0_stage2_iter0;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<8> > tmp_153_reg_411;
    sc_signal< bool > ap_block_state6_pp0_stage3_iter0;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<32> > p_Result_s_fu_339_p5;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<62> > ap_phi_mux_indvar_flatten_phi_fu_141_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_i_op_assign_phi_fu_152_p4;
    sc_signal< sc_lv<31> > ap_phi_mux_p_1_rec_i_i_phi_fu_163_p4;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<32> > p_neg_i_i_fu_177_p2;
    sc_signal< sc_lv<31> > p_lshr_i_i_fu_182_p4;
    sc_signal< sc_lv<32> > tmp_s_fu_192_p1;
    sc_signal< sc_lv<31> > p_lshr_f_i_i_fu_202_p4;
    sc_signal< sc_lv<1> > tmp_fu_170_p3;
    sc_signal< sc_lv<32> > p_neg_t_i_i_fu_196_p2;
    sc_signal< sc_lv<32> > tmp_67_fu_211_p1;
    sc_signal< sc_lv<32> > tmp_25_i_i_fu_215_p3;
    sc_signal< sc_lv<30> > tmp_68_fu_229_p4;
    sc_signal< sc_lv<30> > bound_fu_251_p0;
    sc_signal< sc_lv<32> > bound_fu_251_p1;
    sc_signal< sc_lv<32> > r_fu_268_p2;
    sc_signal< sc_lv<1> > exitcond3_i_i7_fu_286_p2;
    sc_signal< sc_lv<1> > tmp_31_i_i_mid1_fu_274_p2;
    sc_signal< sc_lv<1> > tmp_31_i_i3_fu_280_p2;
    sc_signal< sc_lv<1> > tmp_32_i_i_mid1_fu_299_p2;
    sc_signal< sc_lv<1> > tmp_32_i_i2_fu_304_p2;
    sc_signal< sc_lv<31> > p_1_rec_i_i_op_fu_325_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< bool > ap_block_state9;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<62> > bound_fu_251_p00;
    sc_signal< sc_lv<62> > bound_fu_251_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_pp0_stage0;
    static const sc_lv<7> ap_ST_fsm_pp0_stage1;
    static const sc_lv<7> ap_ST_fsm_pp0_stage2;
    static const sc_lv<7> ap_ST_fsm_pp0_stage3;
    static const sc_lv<7> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<62> ap_const_lv62_0;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<62> ap_const_lv62_1;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<32> ap_const_lv32_6;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage1_iter0();
    void thread_ap_block_state5_pp0_stage2_iter0();
    void thread_ap_block_state6_pp0_stage3_iter0();
    void thread_ap_block_state7_io();
    void thread_ap_block_state7_pp0_stage0_iter1();
    void thread_ap_block_state8_io();
    void thread_ap_block_state8_pp0_stage1_iter1();
    void thread_ap_block_state9();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i_op_assign_phi_fu_152_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_141_p4();
    void thread_ap_phi_mux_p_1_rec_i_i_phi_fu_163_p4();
    void thread_ap_ready();
    void thread_bound_fu_251_p0();
    void thread_bound_fu_251_p00();
    void thread_bound_fu_251_p1();
    void thread_bound_fu_251_p10();
    void thread_bound_fu_251_p2();
    void thread_dMap_data_stream_0_V_blk_n();
    void thread_dMap_data_stream_0_V_read();
    void thread_dMapout_TDATA();
    void thread_dMapout_TDATA_blk_n();
    void thread_dMapout_TLAST();
    void thread_dMapout_TUSER();
    void thread_dMapout_TVALID();
    void thread_dMapout_data_V_1_ack_in();
    void thread_dMapout_data_V_1_ack_out();
    void thread_dMapout_data_V_1_data_out();
    void thread_dMapout_data_V_1_load_A();
    void thread_dMapout_data_V_1_load_B();
    void thread_dMapout_data_V_1_sel();
    void thread_dMapout_data_V_1_state_cmp_full();
    void thread_dMapout_data_V_1_vld_in();
    void thread_dMapout_data_V_1_vld_out();
    void thread_dMapout_last_V_1_ack_in();
    void thread_dMapout_last_V_1_ack_out();
    void thread_dMapout_last_V_1_data_out();
    void thread_dMapout_last_V_1_load_A();
    void thread_dMapout_last_V_1_load_B();
    void thread_dMapout_last_V_1_sel();
    void thread_dMapout_last_V_1_state_cmp_full();
    void thread_dMapout_last_V_1_vld_in();
    void thread_dMapout_last_V_1_vld_out();
    void thread_dMapout_last_V_tmp_fu_309_p3();
    void thread_dMapout_user_V_1_ack_in();
    void thread_dMapout_user_V_1_ack_out();
    void thread_dMapout_user_V_1_data_out();
    void thread_dMapout_user_V_1_load_A();
    void thread_dMapout_user_V_1_load_B();
    void thread_dMapout_user_V_1_sel();
    void thread_dMapout_user_V_1_state_cmp_full();
    void thread_dMapout_user_V_1_vld_in();
    void thread_dMapout_user_V_1_vld_out();
    void thread_dMapout_user_V_tmp_fu_291_p3();
    void thread_exitcond3_i_i7_fu_286_p2();
    void thread_exitcond_flatten_fu_257_p2();
    void thread_i_op_assign_mid2_fu_317_p3();
    void thread_indvar_flatten_next_fu_262_p2();
    void thread_p_1_rec_i_i_op_fu_325_p2();
    void thread_p_Result_s_fu_339_p5();
    void thread_p_lshr_f_i_i_fu_202_p4();
    void thread_p_lshr_i_i_fu_182_p4();
    void thread_p_neg_i_i_fu_177_p2();
    void thread_p_neg_t_i_i_fu_196_p2();
    void thread_p_rec_i_i_fu_331_p3();
    void thread_packets_loc_blk_n();
    void thread_packets_loc_read();
    void thread_r_fu_268_p2();
    void thread_tmp_14_cast_i_i_fu_239_p1();
    void thread_tmp_25_i_i_fu_215_p3();
    void thread_tmp_26_i_i_fu_223_p2();
    void thread_tmp_31_i_i3_fu_280_p2();
    void thread_tmp_31_i_i_mid1_fu_274_p2();
    void thread_tmp_32_i_i2_fu_304_p2();
    void thread_tmp_32_i_i_mid1_fu_299_p2();
    void thread_tmp_67_fu_211_p1();
    void thread_tmp_68_fu_229_p4();
    void thread_tmp_fu_170_p3();
    void thread_tmp_s_fu_192_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
